name: Docker-Production

on:
  push:
    branches:
      - chains/coreum

env:
  REPO: big-dipper-ui
  ORG: coreumfoundation

jobs:
  Build-and-Publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Prepare tags
        id: prep
        run: |
          DOCKER_IMAGE=${{ env.ORG }}/${{ env.REPO }}
          echo "DEV_SHA8=dev-${GITHUB_SHA::8}" >> $GITHUB_ENV
          echo "DEVNET_SHA8=devnet-${GITHUB_SHA::8}" >> $GITHUB_ENV
      - name: Prepare docker build env
        id: dockerPrep
        run: |
          NEXT_PUBLIC_GRAPHQL_URL="https://explorer.coreum.com/v1/graphql"
          NEXT_PUBLIC_GRAPHQL_WS="wss://explorer.coreum.com/v1/graphql"
          NEXT_PUBLIC_URL="https://explorer.coreum.com"
          NEXT_PUBLIC_RPC_WEBSOCKET="wss://sentry.coreum.dev/websocket"
          NEXT_PUBLIC_CHAIN_TYPE="testnet"
          NODE_ENV="production"
          PORT=3000
          echo ::set-output name=NEXT_PUBLIC_GRAPHQL_URL::${NEXT_PUBLIC_GRAPHQL_URL}
          echo ::set-output name=NEXT_PUBLIC_GRAPHQL_WS::${NEXT_PUBLIC_GRAPHQL_WS}
          echo ::set-output name=NEXT_PUBLIC_URL::${NEXT_PUBLIC_URL}
          echo ::set-output name=NEXT_PUBLIC_RPC_WEBSOCKET::${NEXT_PUBLIC_RPC_WEBSOCKET}
          echo ::set-output name=NEXT_PUBLIC_CHAIN_TYPE::${NEXT_PUBLIC_CHAIN_TYPE}
          echo ::set-output name=NODE_ENV::${NODE_ENV}
          echo ::set-output name=PORT::${PORT}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push devnet image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          tags: |
            ${{ env.ORG }}/${{ env.REPO }}:${{ env.DEVNET_SHA8 }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          push: true
          build-args: |
            "NEXT_PUBLIC_GRAPHQL_URL=${{ steps.dockerPrep.outputs.NEXT_PUBLIC_GRAPHQL_URL }}"
            "NEXT_PUBLIC_GRAPHQL_WS=${{ steps.dockerPrep.outputs.NEXT_PUBLIC_GRAPHQL_WS }}"
            "NEXT_PUBLIC_URL=${{ steps.dockerPrep.outputs.NEXT_PUBLIC_URL }}"
            "NEXT_PUBLIC_RPC_WEBSOCKET=${{ steps.dockerPrep.outputs.NEXT_PUBLIC_RPC_WEBSOCKET }}"
            "NEXT_PUBLIC_CHAIN_TYPE=${{ steps.dockerPrep.outputs.NEXT_PUBLIC_CHAIN_TYPE }}"
            "NODE_ENV=${{ steps.dockerPrep.outputs.NODE_ENV }}"
            "PORT=${{ steps.dockerPrep.outputs.PORT }}"

      - name: Build and push development image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.dev
          tags: |
            ${{ env.ORG }}/${{ env.REPO }}:${{ env.DEV_SHA8 }}
          push: true
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
