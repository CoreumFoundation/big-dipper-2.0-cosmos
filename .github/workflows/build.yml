name: Docker-Production

on:
  push:
    branches:
      - master

env:
  REPO: big-dipper-ui
  ORG: coreumfoundation

jobs:
  Build-and-Publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set Env
        run: |
          echo "BUILD_SHA=${GITHUB_SHA::8}" >> $GITHUB_ENV
          export FULL_IMAGE_NAME_WITH_GIT_TAG=${{ (startsWith(github.ref, 'refs/tags/') && format('{0}/{1}:{2}', env.ORG, env.REPO, github.ref_name)) || '' }}
          echo "FULL_IMAGE_NAME_WITH_GIT_TAG=$FULL_IMAGE_NAME_WITH_GIT_TAG" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.ORG }}/${{ env.REPO }}:${{ env.BUILD_SHA }}
            ${{ env.ORG }}/${{ env.REPO }}:latest
            ${{ env.FULL_IMAGE_NAME_WITH_GIT_TAG }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          push: true
          build-args: |
            "NEXT_PUBLIC_GRAPHQL_URL=http://localhost:8080/v1/graphql"
            "NEXT_PUBLIC_GRAPHQL_WS=ws://localhost:8080/v1/graphql"
            "NEXT_PUBLIC_URL=http://localhost:3030"
            "NEXT_PUBLIC_RPC_WEBSOCKET=ws://localhost:26657/websocket"
            "NEXT_PUBLIC_CHAIN_TYPE=devnet"
            "NODE_ENV=production"
            "PROJECT_NAME=web-coreum"
            "PORT=3000"